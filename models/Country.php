<?php

namespace app\models;


use yii\db\ActiveRecord;

class Country extends ActiveRecord
{
// для работы с БД модель должна расширять класс ActiveRecord

    //public $status;

    /*
      // Если таблица названа не согласно общим соглащениям(с маленькой буквы, в ед числе) - то для
      // работы с ней нужно переопределить её название с помощью соотв метода
      public static function tableName()
      {
      // Если имя столбца или таблицы задано "служебным словом", например столбец "date" - то при обращении
      // к нему его нужно экранировать {{date}}, так как есть служебная функция date
      // возвращаем имя таблицы с хреновым названием(экранируем название {{ }}, если необходимо):
      return '{{name_table}}';
      }
     */

    // Создадим правила валидации для проверки данных перед сохранением их в таблицу
    //Метод rules должен возвращать массив правил валидации
    public function rules()
    {
        return [
            //включаем клиентскую валидацию так что бы все поля были заполнены
            [['code', 'name', 'population', 'status'], 'required'],
            //данное поле должно быть уникальным, следовательно вставляем валидатор unique
            ['code', 'unique'],
            //данное поле должно быть  целым и числовым, следовательно вставляем валидатор integer
            ['population', 'integer'],
            //данное поле должно быть  либо 0 либо 1, следовательно вставляем валидатор boolean
            ['status', 'boolean'],
        ];
    }

    //так как необходима форма для ввода данных - воспользуемся методом:
    public function attributeLabels()
    {
        //вернем массив соответствий атрибута и значения его лейбла:
        return [
            'code' => 'Код страны',
            'name' => 'Страна',
            'population' => 'Население',
            'status' => 'Статус',
        ];
    }
}
















